
source.containers.conf: |-
    <source>
      @type tail
      @id in_tail_container_logs
      @label @CONCAT
      path /var/log/containers/*.log
      exclude_path ["/var/log/containers/splunk*.log"]
      pos_file /var/log/fluentd-containers.log.pos
      tag k8s.*
      read_from_head true
      path_key source
      <parse>
        @type json
        time_format %Y-%m-%dT%H:%M:%S.%NZ
        time_key time
        time_type string
        localtime false
      </parse>
    </source>

#################################################################################################
#
# /fluentd/etc/source.containers.conf
#
################################################################################################

<source>
  @id containers.log
  @type tail
  @label @CONCAT
  tag tail.containers.*
  path /var/log/containers/*.log
  exclude_path ["/var/log/containers/dynatrace-oneagent*.log","/var/log/containers/coredns*.log","/var/log/containers/grafana*.log","/var/log/containers/kube-proxy*.log","/var/log/containers/splunk*.log","/var/log/containers/oneagent*.log","/var/log/containers/prometheus*.log","/var/log/containers/tiller*.log","/var/log/containers/aws-node*.log","/var/log/containers/dashboard-metrics*.log","/var/log/containers/metrics-server*.log","/var/log/containers/kubernetes-dashboard*.log","/var/log/containers/cluster-autoscaler*.log"]
  pos_file /var/log/splunk-fluentd-containers.log.pos
  path_key source
  read_from_head true
  <parse>
    @type json
    time_format %Y-%m-%dT%H:%M:%S.%NZ
    time_key time
    time_type string
    localtime false
  </parse>
</source>


#################################################################################################
#
# /fluentd/etc/output.conf
#
################################################################################################
<label @CONCAT>  
  # Events are relabeled then emitted to the SPLUNK label
  <match **>
    @type relabel
    @label @SPLUNK
  </match>
</label>
<label @SPLUNK>
  # Enrich log with k8s metadata
  <filter tail.containers.**>
    @type kubernetes_metadata
    annotation_match [ "^splunk\.com" ]
    de_dot false
  </filter>
  <filter tail.containers.**>
    @type record_transformer
    enable_ruby
    <record>
      # set the sourcetype from splunk.com/sourcetype pod annotation or set it to kube:container:CONTAINER_NAME
      sourcetype ${record.dig("kubernetes", "annotations", "splunk.com/sourcetype") ? "kube:"+record.dig("kubernetes", "annotations", "splunk.com/sourcetype") : "kube:container:"+record.dig("kubernetes","container_name")}
      container_name ${record.dig("kubernetes","container_name")}
      namespace ${record.dig("kubernetes","namespace_name")}
      pod ${record.dig("kubernetes","pod_name")}
      container_id ${record.dig("docker","container_id")}
      pod_uid ${record.dig("kubernetes","pod_id")}
      container_image ${record.dig("kubernetes","container_image")}
      # set the cluster_name field to the configured value, or default to "cluster_name"
      cluster_name nonprod-eks-cluster
      # set the index field to the value found in the pod splunk.com/index annotations. if not set, use namespace annotation, or default to the default_index
      index ${record.dig("kubernetes", "annotations", "splunk.com/index") ? record.dig("kubernetes", "annotations", "splunk.com/index") : record.dig("kubernetes", "namespace_annotations", "splunk.com/index") ? (record["kubernetes"]["namespace_annotations"]["splunk.com/index"]) : ("nonprodawscclus")}
      label_app ${record.dig("kubernetes","labels","app")}
      label_k8s-app ${record.dig("kubernetes","labels","k8s-app")}
      label_release ${record.dig("kubernetes","labels","release")}
      blacklist ${record.dig("kubernetes", "annotations", "splunk.com/exclude") ? record.dig("kubernetes", "annotations", "splunk.com/exclude") : record.dig("kubernetes", "namespace_annotations", "splunk.com/exclude") ? (record["kubernetes"]["namespace_annotations"]["splunk.com/exclude"]) : ("false")}
    </record>
  </filter>
  <filter tail.containers.**>
    # Exclude all logs that are blacklisted
    @type grep
    <exclude>
      key blacklist
      pattern /^true$/
    </exclude>
  </filter>
  # extract pod_uid and container_name for CRIO runtime 
  
  # = custom filters specified by users =

  # = output =
  <match **>
    @type splunk_hec
    protocol https
    hec_host "splunkdts.carnival.com"
    hec_port 8088
    hec_token "#{ENV['SPLUNK_HEC_TOKEN']}"
    index_key index
    insecure_ssl true
    host "#{ENV['K8S_NODE_NAME']}"
    source_key source
    sourcetype_key sourcetype
    <fields>
      # currently CRI does not produce log paths with all the necessary
      # metadata to parse out pod, namespace, container_name, container_id.
      # this may be resolved in the future by this issue: https://github.com/kubernetes/kubernetes/issues/58638#issuecomment-385126031
      container_image
      pod_uid
      pod
      container_name
      namespace
      container_id
      cluster_name
      label_app
      label_k8s-app
      label_release
    </fields>
    <buffer>
      @type memory
      chunk_limit_records 10000
      chunk_limit_size 20m
      flush_interval 60s
      flush_thread_count 5
      overflow_action block
      retry_max_times 3
      total_limit_size 600m
    </buffer>
    <format monitor_agent>
      @type json
    </format>
    <format>
      # we just want to keep the raw logs, not the structure created by docker or journald
      @type single_value
      message_key log
      add_newline false
    </format>
  </match>
</label>